/****************************************************************************************************************//**
*   @file               errno.h
*   @brief              Implementation of the POSIX.1 `<errno.h>` specification
*   @author             Adam Clark (hobbyos@eryjus.com)
*   @date               2021-Nov-14
*   @since              v0.0.14
*
*   @copyright          Copyright (c)  2017-2021 -- Adam Clark\n
*                       Licensed under "THE BEER-WARE LICENSE"\n
*                       See \ref LICENSE.md for details.
*
*   This file is the CenturyOS implementation of the POSIX.1 `errno.h` specification.  It is intended for use
*   with the CenturyOS libc and is not intended to work on any generic OS.
*
*   @note               These constants are deliberately different than the ones previously leveraged from Linux
*                       and are in alphabetical order.
*
* ------------------------------------------------------------------------------------------------------------------
*
*   |     Date    | Tracker |  Version | Pgmr | Description
*   |:-----------:|:-------:|:--------:|:----:|:--------------------------------------------------------------------
*   | 2021-Nov-14 | Initial |  v0.0.14 | ADCL | Initial version
*
*///=================================================================================================================



#ifndef __ERRNO_H__
#define __ERRNO_H__


/****************************************************************************************************************//**
*   @var                errno
*   @brief              The error number when there was a problem executing an OS Service
*
*   @posix              The `<errno.h>` header shall provide a declaration or definition for `errno`. The symbol
*                       errno shall expand to a modifiable lvalue of type `int`. It is unspecified whether `errno`
*                       is a macro or an identifier declared with external linkage. If a macro definition is
*                       suppressed in order to access an actual object, or a program defines an identifier with
*                       the name `errno`, the behavior is undefined.
*///-----------------------------------------------------------------------------------------------------------------
extern int errno;



/****************************************************************************************************************//**
*   @addtogroup         ERRNO   POSIX System Error Numbers
*
*   @posix              The `<errno.h>` header shall define the following macros which shall expand to integer
*                       constant expressions with type `int`, distinct positive values (except as noted below), and
*                       which shall be suitable for use in `#if` preprocessing directives.
*
*   @{
*///-----------------------------------------------------------------------------------------------------------------


/****************************************************************************************************************//**
*   @def                E2BIG
*   @brief              Argument list too long.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      E2BIG
# undef     E2BIG
#endif
#define     E2BIG               1



/****************************************************************************************************************//**
*   @def                EACCES
*   @brief              Permission denied.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EACCES
# undef     EACCES
#endif
#define     EACCES              2



/****************************************************************************************************************//**
*   @def                EADDRINUSE
*   @brief              Address in use.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EADDRINUSE
# undef     EADDRINUSE
#endif
#define     EADDRINUSE          3



/****************************************************************************************************************//**
*   @def                EADDRNOTAVAIL
*   @brief              Address not available.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EADDRNOTAVAIL
# undef     EADDRNOTAVAIL
#endif
#define     EADDRNOTAVAIL       4



/****************************************************************************************************************//**
*   @def                EAFNOSUPPORT
*   @brief              Address family not supported.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EAFNOSUPPORT
# undef     EAFNOSUPPORT
#endif
#define     EAFNOSUPPORT        5



/****************************************************************************************************************//**
*   @def                EAGAIN
*   @brief              Resource unavailable, try again.
*
*   @posix              May be the same value as `EWOULDBLOCK`.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EAGAIN
# undef     EAGAIN
#endif
#define     EAGAIN              6



/****************************************************************************************************************//**
*   @def                EALREADY
*   @brief              Connection already in progress.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EALREADY
# undef     EALREADY
#endif
#define     EALREADY            7



/****************************************************************************************************************//**
*   @def                EBADF
*   @brief              Bad file descriptor.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EBADF
# undef     EBADF
#endif
#define     EBADF               8



/****************************************************************************************************************//**
*   @def                EBADMSG
*   @brief              Bad message.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EBADMSG
# undef     EBADMSG
#endif
#define     EBADMSG             9



/****************************************************************************************************************//**
*   @def                EBUSY
*   @brief              Device or resource busy.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EBUSY
# undef     EBUSY
#endif
#define     EBUSY               10



/****************************************************************************************************************//**
*   @def                ECANCELED
*   @brief              Operation canceled.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ECANCELED
# undef     ECANCELED
#endif
#define     ECANCELED           11



/****************************************************************************************************************//**
*   @def                ECHILD
*   @brief              No child processes.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ECHILD
# undef     ECHILD
#endif
#define     ECHILD              12



/****************************************************************************************************************//**
*   @def                ECONNABORTED
*   @brief              Connection aborted.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ECONNABORTED
# undef     ECONNABORTED
#endif
#define     ECONNABORTED        13



/****************************************************************************************************************//**
*   @def                ECONNREFUSED
*   @brief              Connection refused.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ECONNREFUSED
# undef     ECONNREFUSED
#endif
#define     ECONNREFUSED        14



/****************************************************************************************************************//**
*   @def                ECONNRESET
*   @brief              Connection reset.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ECONNRESET
# undef     ECONNRESET
#endif
#define     ECONNRESET          15



/****************************************************************************************************************//**
*   @def                EDEADLK
*   @brief              Resource deadlock would occur.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EDEADLK
# undef     EDEADLK
#endif
#define     EDEADLK             16



/****************************************************************************************************************//**
*   @def                EDESTADDRREQ
*   @brief              Destination address required.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EDESTADDRREQ
# undef     EDESTADDRREQ
#endif
#define     EDESTADDRREQ        17



/****************************************************************************************************************//**
*   @def                EDOM
*   @brief              Mathematics argument out of domain of function.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EDOM
# undef     EDOM
#endif
#define     EDOM                18



/****************************************************************************************************************//**
*   @def                EDQUOT
*   @brief              Reserved.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EDQUOT
# undef     EDQUOT
#endif
#define     EDQUOT              19



/****************************************************************************************************************//**
*   @def                EEXIST
*   @brief              File exists.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EEXIST
# undef     EEXIST
#endif
#define     EEXIST              20



/****************************************************************************************************************//**
*   @def                EFAULT
*   @brief              Bad address.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EFAULT
# undef     EFAULT
#endif
#define     EFAULT              21



/****************************************************************************************************************//**
*   @def                EFBIG
*   @brief              File too large.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EFBIG
# undef     EFBIG
#endif
#define     EFBIG               22



/****************************************************************************************************************//**
*   @def                EHOSTUNREACH
*   @brief              Host is unreachable.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EHOSTUNREACH
# undef     EHOSTUNREACH
#endif
#define     EHOSTUNREACH        23



/****************************************************************************************************************//**
*   @def                EIDRM
*   @brief              Identifier removed.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EIDRM
# undef     EIDRM
#endif
#define     EIDRM               24



/****************************************************************************************************************//**
*   @def                EILSEQ
*   @brief              Illegal byte sequence.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EILSEQ
# undef     EILSEQ
#endif
#define     EILSEQ              25




/****************************************************************************************************************//**
*   @def                EINPROGRESS
*   @brief              Operation in progress.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EINPROGRESS
# undef     EINPROGRESS
#endif
#define     EINPROGRESS         26



/****************************************************************************************************************//**
*   @def                EINTR
*   @brief              Interrupted function.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EINTR
# undef     EINTR
#endif
#define     EINTR               27



/****************************************************************************************************************//**
*   @def                EINVAL
*   @brief              Invalid argument.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EINVAL
# undef     EINVAL
#endif
#define     EINVAL              28



/****************************************************************************************************************//**
*   @def                EIO
*   @brief              I/O error.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EIO
# undef     EIO
#endif
#define     EIO                 29



/****************************************************************************************************************//**
*   @def                EISCONN
*   @brief              Socket is connected.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EISCONN
# undef     EISCONN
#endif
#define     EISCONN             30



/****************************************************************************************************************//**
*   @def                EISDIR
*   @brief              Is a directory.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EISDIR
# undef     EISDIR
#endif
#define     EISDIR              31



/****************************************************************************************************************//**
*   @def                ELOOP
*   @brief              Too many levels of symbolic links.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ELOOP
# undef     ELOOP
#endif
#define     ELOOP               32



/****************************************************************************************************************//**
*   @def                EMFILE
*   @brief              File descriptor value too large.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EMFILE
# undef     EMFILE
#endif
#define     EMFILE              33



/****************************************************************************************************************//**
*   @def                EMLINK
*   @brief              Too many links.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EMLINK
# undef     EMLINK
#endif
#define     EMLINK              34



/****************************************************************************************************************//**
*   @def                EMSGSIZE
*   @brief              Message too large.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EMSGSIZE
# undef     EMSGSIZE
#endif
#define     EMSGSIZE            35



/****************************************************************************************************************//**
*   @def                EMULTIHOP
*   @brief              Reserved.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EMULTIHOP
# undef     EMULTIHOP
#endif
#define     EMULTIHOP           36



/****************************************************************************************************************//**
*   @def                ENAMETOOLONG
*   @brief              Filename too long.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENAMETOOLONG
# undef     ENAMETOOLONG
#endif
#define     ENAMETOOLONG        37



/****************************************************************************************************************//**
*   @def                ENETDOWN
*   @brief              Network is down.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENETDOWN
# undef     ENETDOWN
#endif
#define     ENETDOWN            38



/****************************************************************************************************************//**
*   @def                ENETRESET
*   @brief              Connection aborted by network.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENETRESET
# undef     ENETRESET
#endif
#define     ENETRESET           39



/****************************************************************************************************************//**
*   @def                ENETUNREACH
*   @brief              Network unreachable.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENETUNREACH
# undef     ENETUNREACH
#endif
#define     ENETUNREACH         40



/****************************************************************************************************************//**
*   @def                ENFILE
*   @brief              Too many files open in system.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENFILE
# undef     ENFILE
#endif
#define     ENFILE              41



/****************************************************************************************************************//**
*   @def                ENOBUFS
*   @brief              No buffer space available.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOBUFS
# undef     ENOBUFS
#endif
#define     ENOBUFS             42



/****************************************************************************************************************//**
*   @def                ENODATA
*   @brief              No message is available on the STREAM head read queue.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENODATA
# undef     ENODATA
#endif
#define     ENODATA             43



/****************************************************************************************************************//**
*   @def                ENODEV
*   @brief              No such device.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENODEV
# undef     ENODEV
#endif
#define     ENODEV              44



/****************************************************************************************************************//**
*   @def                ENOENT
*   @brief              No such file or directory.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOENT
# undef     ENOENT
#endif
#define     ENOENT              45



/****************************************************************************************************************//**
*   @def                ENOEXEC
*   @brief              Executable file format error.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOEXEC
# undef     ENOEXEC
#endif
#define     ENOEXEC             46



/****************************************************************************************************************//**
*   @def                ENOLCK
*   @brief              No locks available.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOLCK
# undef     ENOLCK
#endif
#define     ENOLCK              47



/****************************************************************************************************************//**
*   @def                ENOLINK
*   @brief              Reserved.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOLINK
# undef     ENOLINK
#endif
#define     ENOLINK             48



/****************************************************************************************************************//**
*   @def                ENOMEM
*   @brief              Not enough space.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOMEM
# undef     ENOMEM
#endif
#define     ENOMEM              49



/****************************************************************************************************************//**
*   @def                ENOMSG
*   @brief              No message of the desired type.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOMSG
# undef     ENOMSG
#endif
#define     ENOMSG              50



/****************************************************************************************************************//**
*   @def                ENOPROTOOPT
*   @brief              Protocol not available.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOPROTOOPT
# undef     ENOPROTOOPT
#endif
#define     ENOPROTOOPT         51



/****************************************************************************************************************//**
*   @def                ENOSPC
*   @brief              No space left on device.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOSPC
# undef     ENOSPC
#endif
#define     ENOSPC              52



/****************************************************************************************************************//**
*   @def                ENOSR
*   @brief              No STREAM resources.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOSR
# undef     ENOSR
#endif
#define     ENOSR               53



/****************************************************************************************************************//**
*   @def                ENOSTR
*   @brief              Not a STREAM.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOSTR
# undef     ENOSTR
#endif
#define     ENOSTR              54



/****************************************************************************************************************//**
*   @def                ENOSYS
*   @brief              Functionality not supported.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOSYS
# undef     ENOSYS
#endif
#define     ENOSYS              55



/****************************************************************************************************************//**
*   @def                ENOTCONN
*   @brief              The socket is not connected.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOTCONN
# undef     ENOTCONN
#endif
#define     ENOTCONN            56



/****************************************************************************************************************//**
*   @def                ENOTDIR
*   @brief              Not a directory or a symbolic link to a directory.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOTDIR
# undef     ENOTDIR
#endif
#define     ENOTDIR             57



/****************************************************************************************************************//**
*   @def                ENOTEMPTY
*   @brief              Directory not empty.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOTEMPTY
# undef     ENOTEMPTY
#endif
#define     ENOTEMPTY           58



/****************************************************************************************************************//**
*   @def                ENOTRECOVERABLE
*   @brief              State not recoverable.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOTRECOVERABLE
# undef     ENOTRECOVERABLE
#endif
#define     ENOTRECOVERABLE     59



/****************************************************************************************************************//**
*   @def                ENOTSOCK
*   @brief              Not a socket.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOTSOCK
# undef     ENOTSOCK
#endif
#define     ENOTSOCK            60



/****************************************************************************************************************//**
*   @def                ENOTSUP
*   @brief              Not supported.
*
*   @posix              May be the same value as `EOPNOTSUPP`.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOTSUP
# undef     ENOTSUP
#endif
#define     ENOTSUP             61



/****************************************************************************************************************//**
*   @def                ENOTTY
*   @brief              Inappropriate I/O control operation.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENOTTY
# undef     ENOTTY
#endif
#define     ENOTTY              62



/****************************************************************************************************************//**
*   @def                ENXIO
*   @brief              No such device or address.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ENXIO
# undef     ENXIO
#endif
#define     ENXIO               63



/****************************************************************************************************************//**
*   @def                EOPNOTSUPP
*   @brief              Operation not supported on socket.
*
*   @posix              May be the same value as `ENOTSUP`.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EOPNOTSUPP
# undef     EOPNOTSUPP
#endif
#define     EOPNOTSUPP          ENOTSUP



/****************************************************************************************************************//**
*   @def                EOVERFLOW
*   @brief              Value too large to be stored in data type.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EOVERFLOW
# undef     EOVERFLOW
#endif
#define     EOVERFLOW           65



/****************************************************************************************************************//**
*   @def                EOWNERDEAD
*   @brief              Previous owner died.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EOWNERDEAD
# undef     EOWNERDEAD
#endif
#define     EOWNERDEAD          66



/****************************************************************************************************************//**
*   @def                EPERM
*   @brief              Operation not permitted.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EPERM
# undef     EPERM
#endif
#define     EPERM               67



/****************************************************************************************************************//**
*   @def                EPIPE
*   @brief              Broken pipe.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EPIPE
# undef     EPIPE
#endif
#define     EPIPE               68



/****************************************************************************************************************//**
*   @def                EPROTO
*   @brief              Protocol error.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EPROTO
# undef     EPROTO
#endif
#define     EPROTO              69



/****************************************************************************************************************//**
*   @def                EPROTONOSUPPORT
*   @brief              Protocol not supported.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EPROTONOSUPPORT
# undef     EPROTONOSUPPORT
#endif
#define     EPROTONOSUPPORT     70



/****************************************************************************************************************//**
*   @def                EPROTOTYPE
*   @brief              Protocol wrong type for socket.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EPROTOTYPE
# undef     EPROTOTYPE
#endif
#define     EPROTOTYPE          71



/****************************************************************************************************************//**
*   @def                ERANGE
*   @brief              Result too large.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ERANGE
# undef     ERANGE
#endif
#define     ERANGE              72



/****************************************************************************************************************//**
*   @def                EROFS
*   @brief              Read-only file system.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EROFS
# undef     EROFS
#endif
#define     EROFS               73



/****************************************************************************************************************//**
*   @def                ESPIPE
*   @brief              Invalid seek.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ESPIPE
# undef     ESPIPE
#endif
#define     ESPIPE              74



/****************************************************************************************************************//**
*   @def                ESRCH
*   @brief              No such process.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ESRCH
# undef     ESRCH
#endif
#define     ESRCH               75



/****************************************************************************************************************//**
*   @def                ESTALE
*   @brief              Reserved.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ESTALE
# undef     ESTALE
#endif
#define     ESTALE              76



/****************************************************************************************************************//**
*   @def                ETIME
*   @brief              Stream ioctl() timeout.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ETIME
# undef     ETIME
#endif
#define     ETIME               77



/****************************************************************************************************************//**
*   @def                ETIMEDOUT
*   @brief              Connection timed out.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ETIMEDOUT
# undef     ETIMEDOUT
#endif
#define     ETIMEDOUT           78



/****************************************************************************************************************//**
*   @def                ETXTBSY
*   @brief              Text file busy.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      ETXTBSY
# undef     ETXTBSY
#endif
#define     ETXTBSY             79



/****************************************************************************************************************//**
*   @def                EWOULDBLOCK
*   @brief              Operation would block.
*
*   @posix              May be the same value as `EAGAIN`
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EWOULDBLOCK
# undef     EWOULDBLOCK
#endif
#define     EWOULDBLOCK         EAGAIN



/****************************************************************************************************************//**
*   @def                EXDEV
*   @brief              Cross-device link.
*///-----------------------------------------------------------------------------------------------------------------
#ifdef      EXDEV
# undef     EXDEV
#endif
#define     EXDEV               81



/// @}



#endif





